{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","null","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","goods","reversed","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","prevIsReversed","map","good","indexOf","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,oBAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAAOI,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA7BR,SAA0BC,EAAcL,EACtCM,GACA,IAAIC,EAAa,YAAOF,GAqBxB,OAnBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKL,EAAOgB,SACV,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAAOkB,OACV,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXP,IACFC,EAAgBA,EAAcO,WAGzBP,EAMcQ,CAAiBnB,EAAiBI,EAAQE,GAE/D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMjB,EAAUN,EAAOgB,WAChCK,UAAWhB,IAAWL,EAAOgB,SACzB,iBACA,0BALN,iCAUA,wBACEM,KAAK,SACLC,QAAS,kBAAMjB,EAAUN,EAAOkB,SAChCG,UAAWhB,IAAWL,EAAOkB,OACzB,iBACA,0BALN,4BAUA,wBACEI,KAAK,SACLD,UAAWd,EACP,oBACA,6BACJgB,QAAS,kBAAMf,GAAc,SAAAgB,GAAc,OAAKA,MALlD,qBAUCnB,GAAUE,EAEP,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAUN,EAAOI,MACjBI,GAAc,IALlB,mBAWA,QAGN,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAqDA,GAA7BjB,EAAakB,QAAQD,aCxGvDE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.84e78bdc.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  null = '',\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\ntype Goods = string[];\n\nfunction getPreparedGoods(goods: Goods, sortBy: SortBy,\n  reversed: boolean): Goods {\n  let preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortBy.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortBy.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortBy.null);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortBy.alphabet)}\n          className={sortBy === SortBy.alphabet\n            ? 'button is-info'\n            : 'button is-info is-light'}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortBy.length)}\n          className={sortBy === SortBy.length\n            ? 'button is-info'\n            : 'button is-info is-light'}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => setIsReversed(prevIsReversed => !prevIsReversed)}\n        >\n          Reverse\n        </button>\n\n        {sortBy || isReversed\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortBy(SortBy.null);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n          : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={visibleGoods.indexOf(good)}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}